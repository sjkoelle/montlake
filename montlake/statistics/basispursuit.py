# AUTOGENERATED! DO NOT EDIT! File to edit: nbs/statistics.basispursuit.ipynb (unless otherwise specified).

__all__ = ['get_basispursuit_losses']

# Cell
import numpy as np
from itertools import combinations

def get_basispursuit_losses(X,Y):

    nsel = X.shape[0]
    p = X.shape[2]
    d = X.shape[1]
    n_components = Y.shape[2]

    ols_norms  = np.zeros(np.repeat(p,d))
    parameterizations_possible = np.asarray(list(combinations(range(p), d)))
    nparameterizations_possible = parameterizations_possible.shape[0]
    bp_coeffs = np.zeros((nsel, nparameterizations_possible, d, n_components))
    for i in range(nsel):
        for j in range(nparameterizations_possible):
            bp_coeffs[i, j] = np.linalg.lstsq(X[i, :, parameterizations_possible[j]], Y[i])[0]
    for j in range(nparameterizations_possible):
        ols_norms[tuple(parameterizations_possible[j])] = np.linalg.norm(bp_coeffs[:,j,:,:], axis = tuple([0,2])).sum()

    return(ols_norms)
